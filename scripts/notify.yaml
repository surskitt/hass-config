---
presence_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"
    icon:
      description: "Icon to use for curst notifications"
      example: "star.png"

  sequence:
    - service: telegram_bot.send_message
      data:
        message: "{{ message }}"
    
    - variables:
        daapd_playing: "{{ states('media_player.forked_daapd_server') }}"

    - service: media_player.media_pause
      entity_id: media_player.forked_daapd_server

    - service: script.living_room_notify
      data:
        message: "{{ message }}"

    - service: script.kitchen_notify
      data:
        message: "{{ message }}"

    - service: script.bedroom_notify
      data:
        message: "{{ message }}"

    - service: script.office_notify
      data:
        message: "{{ message }}"
        icon: "{{ icon }}"

    - choose:
        - conditions: "{{ daapd_playing == 'playing' }}"
          sequence:
            - service: media_player.media_play
              entity_id: media_player.forked_daapd_server

living_room_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"

  sequence:
    - condition: state
      entity_id: input_boolean.living_room_presence
      state: 'on'

    - delay: 5

    - service: script.tv_notify
      data:
        message: "{{ message }}"

    - service: media_player.volume_set
      entity_id: media_player.living_room_speaker
      data:
        volume_level: 0.5

    - service: tts.cloud_say
      entity_id: media_player.living_room_speaker
      data:
        message: "{{ message }}"
        language: en-IE

    - delay: 5

kitchen_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"

  sequence:
    - condition: state
      entity_id: input_boolean.kitchen_presence
      state: 'on'

    - delay: 5

    - service: media_player.volume_set
      entity_id: media_player.kitchen_speaker
      data:
        volume_level: 0.5

    - service: tts.cloud_say
      entity_id: media_player.kitchen_speaker
      data:
        message: "{{ message }}"
        language: en-IE

    - delay: 5

bedroom_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"

  sequence:
    - condition: state
      entity_id: input_boolean.bedroom_presence
      state: 'on'

    - delay: 5

    - service: media_player.volume_set
      entity_id: media_player.bedroom_speaker
      data:
        volume_level: 0.5

    - service: tts.cloud_say
      entity_id: media_player.bedroom_speaker
      data:
        message: "{{ message }}"
        language: en-IE

    - delay: 5

office_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"
    icon:
      description: "Icon to use for curst notifications"
      example: "star.png"

  sequence:
    - condition: state
      entity_id: input_boolean.office_presence
      state: 'on'

    - service: script.wigeon_notify
      data:
        message: "{{ message }}"
        icon: "{{ icon }}"

    - delay: 5

    - service: media_player.volume_set
      entity_id: media_player.office_speaker
      data:
        volume_level: 0.5

    - service: tts.cloud_say
      entity_id: media_player.office_speaker
      data:
        message: "{{ message }}"
        language: en-IE

    - delay: 5

wigeon_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"
    icon:
      description: "Icon to use for curst notifications"
      example: "star.png"

  sequence:
    - condition: state
      entity_id: switch.wigeon
      state: 'on'

    - service: rest_command.wigeon_notify
      data:
        summary: "Home assistant notification"
        body: "{{ message }}"
        icon: "{{ icon }}"
        # urgency:

teal_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"
    icon:
      description: "Icon to use for curst notifications"
      example: "star.png"

  sequence:
    - condition: state
      entity_id: switch.teal
      state: 'on'

    - service: rest_command.teal_notify
      data:
        summary: "Home assistant notification"
        body: "{{ message }}"
        icon: "{{ icon }}"
        # urgency:

tv_notify:
  fields:
    message:
      description: "Message to be sent in notification"
      example: "Notification message"

  sequence:
    - condition: state
      entity_id: switch.tv
      state: 'on'

    - service: notify.lg_webos_smart_tv
      data:
        message: "{{ message }}"
