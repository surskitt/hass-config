---
- name: wigeon
  platform: wake_on_lan
  mac: '2C:FD:A1:BE:32:53'
  host: 192.168.1.1
  turn_off:
    service: shell_command.sleep_wigeon

- name: serpentine
  platform: wake_on_lan
  mac: '6C:BF:B5:01:96:C0'
  host: 192.168.2.8
  turn_off:
    service: shell_command.sleep_serpentine

- platform: template
  switches:
    rouen:
      value_template: "{{ states('sensor.dryer_plug_power')|int > 5 }}"
      turn_on:
        service: switch.turn_on
        data:
          entity_id: switch.dryer_plug_status
      turn_off:
        service: shell_command.rouen_off
      icon_template: 'mdi:gamepad-square'

- platform: template
  switches:
    tv:
      value_template: "{{ is_state('media_player.tv', 'on') }}"
      turn_on:
        service: media_player.turn_on
        data:
          entity_id: media_player.tv
      turn_off:
        service: media_player.turn_off
        data:
          entity_id: media_player.tv

    google_tv:
      value_template: "{{ not is_state('media_player.google_tv', 'off') }}"
      turn_on:
        service: media_player.turn_on
        data:
          entity_id: media_player.google_tv
      turn_off:
        service: media_player.turn_off
        data:
          entity_id: media_player.google_tv

- platform: template
  switches:
    office_diffuser:
      icon_template: 'mdi:tailwind'
      value_template: >
        {{
          is_state_attr('fan.office_diffuser_control', 'speed', 'low')
          or
          is_state_attr('fan.office_diffuser_control', 'speed', 'high')
        }}
      turn_on:
        service: fan.set_speed
        data:
          entity_id: fan.office_diffuser_control
          speed: 'high'
      turn_off:
        service: fan.set_speed
        data:
          entity_id: fan.office_diffuser_control
          speed: 'off'

    living_room_diffuser:
      icon_template: 'mdi:tailwind'
      value_template: >
        {{
          is_state_attr('fan.living_room_diffuser', 'speed', 'low')
          or
          is_state_attr('fan.living_room_diffuser', 'speed', 'high')
        }}
      turn_on:
        service: fan.set_speed
        data:
          entity_id: fan.living_room_diffuser
          speed: 'high'
      turn_off:
        service: fan.set_speed
        data:
          entity_id: fan.living_room_diffuser
          speed: 'off'

- platform: template
  switches:
    bazarr_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.bazarr_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.bazarr_scale_up
      turn_off:
        service: shell_command.bazarr_scale_down

    calibre_web_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.calibre_web_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.calibre_web_scale_up
      turn_off:
        service: shell_command.calibre_web_scale_down

    flood_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.flood_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.flood_scale_up
      turn_off:
        service: shell_command.flood_scale_down

    forked_daapd_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.forked_daapd_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.forked_daapd_scale_up
      turn_off:
        service: shell_command.forked_daapd_scale_down

    komga_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.komga_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.komga_scale_up
      turn_off:
        service: shell_command.komga_scale_down

    jackett_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.jackett_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.jackett_scale_up
      turn_off:
        service: shell_command.jackett_scale_down

    mylar_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.mylar_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.mylar_scale_up
      turn_off:
        service: shell_command.mylar_scale_down

    nzbget_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.nzbget_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.nzbget_scale_up
      turn_off:
        service: shell_command.nzbget_scale_down

    plex_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.plex_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.plex_scale_up
      turn_off:
        service: shell_command.plex_scale_down

    pyload_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.pyload_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.pyload_scale_up
      turn_off:
        service: shell_command.pyload_scale_down

    radarr_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.radarr_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.radarr_scale_up
      turn_off:
        service: shell_command.radarr_scale_down

    sonarr_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.sonarr_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.sonarr_scale_up
      turn_off:
        service: shell_command.sonarr_scale_down

    transmission_deployment:
      icon_template: 'mdi:kubernetes'
      value_template: "{{ states('sensor.transmission_deployment_replicas')|int > 0 }}"
      turn_on:
        service: shell_command.transmission_scale_up
      turn_off:
        service: shell_command.transmission_scale_down

- platform: bhyve
